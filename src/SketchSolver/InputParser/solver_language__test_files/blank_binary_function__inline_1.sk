pragma options "--bnd-inline-amnt 1";
pragma options "--bnd-arr-size 9";
pragma options "--bnd-unroll-amnt 9";


bit binary_concept(bit x0, bit x1) {
    if(!x0 && !x1) {
        return ??(1);
    } else if (!x0 && x1) {
        return ??(1);
    } else if(x0 && !x1) {
        return ??(1);
    } else {
        return ??(1);
    }
}

generator bit predicate(int n, bit[n] bits) {
    bit choose = ??(1);
    if(choose) {
        int idx = ??(4);
        assert(idx < n);
        return bits[idx];
    } else {
        return binary_concept(predicate(n, bits), predicate(n, bits));
    }
}

bit program(int n, bit[n] bits){
    return predicate(n, bits);
}

@FromFile("/Users/klimentserafimov/CLionProjects/sketch-backend/src/SketchSolver/InputParser/solver_language__test_files/inputs.txt")
harness void main_sk(int n, bit[n] bits, bit out) {
    assert(program(n, bits) == out);
}